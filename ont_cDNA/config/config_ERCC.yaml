
## Output name and relevant info
export NAME=sfariReview
export SPECIES=hg38

# sequencing mode: <targeted> <whole>
export SEQUENCING=whole

# if multiplexing was performed
export MULTIPLEXING=TRUE

# if perform demultiplexing
export DEMULTIPLEX=FALSE
DEMULTIPLEX_DIR=/lustre/projects/Research_Project-MRC190311/longReadSeq/ONTRNA/SFARI/1_raw/Repeat_Aug2024/fastq_pass

# if orientation is required
export ORIENTATE=FALSE

## Output root directory filepath (ensure path exists)
export SCRIPT_ROOT=/lustre/projects/Research_Project-MRC148213/lsl693/scripts/LRPipeline/ont_cDNA
export WKD_ROOT=/lustre/projects/Research_Project-MRC190311/longReadSeq/ONTRNA/SFARI/repeatAug2024/ERCC
export META_ROOT=/lustre/projects/Research_Project-MRC190311/longReadSeq/ONTRNA/SFARI/0_metadata

## SKLeung scripts
export LOGEN_ROOT=/lustre/projects/Research_Project-MRC148213/lsl693/scripts/LOGen
export PATH=$PATH:${LOGEN_ROOT}/miscellaneous
export PATH=$PATH:${LOGEN_ROOT}/assist_ont_processing
SUBSETPOLYTAILS=$LOGEN_ROOT/assist_ont_processing/subset_polyA_polyT.py
ERCCRESULTS=$LOGEN_ROOT/compare_datasets/run_ercc.R


## ---------------------------

## Reference data filepaths (ERCC)
export GENOME_FASTA=/lustre/projects/Research_Project-MRC148213/lsl693/references/ERCC/ERCC92.fa
export GENOME_GTF=/lustre/projects/Research_Project-MRC148213/lsl693/references/ERCC/ERCC92.gtf

## ---------------------------

# number of total samples (across all flow cells)
export numSamples=3

## ONT raw data
# sequentially specify paths of raw fastq files from multiple flow cells
export RAW_ROOT_DIR=/lustre/projects/Research_Project-MRC190311/longReadSeq/ONTRNA/SFARI/1_raw/Repeat_Aug2024

# export barcode (if multiplexing=TRUE) <barcode number> <sample name>
BARCODE_CONFIG=${META_ROOT}/sfariReviewBarcode.csv
export ALL_SAMPLES_NAMES=($(awk -F "\"*,\"*" '{print $1}' ${BARCODE_CONFIG}))
cat $BARCODE_CONFIG

# sample names to replace barcode names downstream 
SAMPLE_ID=${META_ROOT}/sfariReviewSampleID.csv

## ---------------------------

## Software 
export SOFTDIR=/lustre/projects/Research_Project-MRC148213/lsl693/software

export MINIONQC=${SOFTDIR}/minion_qc/MinIONQC.R
# to run Porechop, require gcc-version 4.9.1 or more; 
# on Knight: git clone https://github.com/rrwick/Porechop.git; cd Porechop; make
# transfer whole Porechop folder from Knight to ISCA, and chmod 
export PORECHOP=${SOFTDIR}/Porechop/porechop-runner.py
export TCLEAN=${SOFTDIR}/TranscriptClean/TranscriptClean.py
export CUPCAKE=${SOFTDIR}/cDNA_Cupcake
export ANNOTATION=$CUPCAKE/annotation
export SEQUENCE=$CUPCAKE/sequence
export PYTHONPATH=$PYTHONPATH:$SEQUENCE
export SQANTI3_DIR=${SOFTDIR}/SQANTI3


## ---------------------------

## Software input files
# SQANTI3 input files
CAGE_PEAK=$SQANTI3_DIR/data/ref_TSS_annotation/human.refTSS_v3.1.hg38.bed
POLYA=$SQANTI3_DIR/data/polyA_motifs/mouse_and_human.polyA_motif.txt


## ---------------------------
cd ${WKD_ROOT}
# creating a symlink to $WKD_ROOT/1_demultiplex
mkdir -p 1b_demultiplex_merged 2_cutadapt_merge 3_minimap 4_tclean 5_cupcake
mkdir -p ${WKD_ROOT}/5_cupcake/5_align ${WKD_ROOT}/5_align/combined_fasta 
mkdir -p $WKD_ROOT/5_cupcake/5_align/combined ${WKD_ROOT}/5_align/combined_fasta 
mkdir -p $WKD_ROOT/5_cupcake/6_collapse $WKD_ROOT/5_cupcake/7_sqanti3
